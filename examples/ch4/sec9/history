#!/bin/sh
# Generate unnormalised subband populations file

echo 1 1 > Nu.r

# Define band edge profile of 200A/100A/200A single quantum well, in
# addition to single monolayer of dopant (4th column), note positive values
# imply p-type doping

echo 50.0000 0.2 0.0 0.0  > s.r
echo  48.5875 0.0 0.0 0.0 >> s.r
echo   2.8250 0.0 0.0 1.0 >> s.r
echo  48.5875 0.0 0.0 0.0 >> s.r
echo 50.0000 0.2 0.0 0.0 >> s.r

# Generate quantum well profile and initial dopant profile

efsx -N 4

# Save quantum well profile for later

mv x.r x0.r

# Save initial diffusant profile `d.r' for later too

mv d.r d0.r

# Run diffusion `simulation' for various times

for t in 0 10 20 50 100 200 
do
{
 # Define output file

 OUT=Eh-t=$t.r

 # Initialise files

 rm -f $OUT

 # Initialise diffusant file

 rm -f x.r

 # Make diffusant profile in `d0.r' the input to the diffusion equation,
 # need to add an extra NULL column to conform to usual 
 # `displacement-z alloy-x alloy-y' format of `x.r'

 nawk '{printf("%20.17e %20.17e 0.000\n",$1,$2)}' d0.r >> x.r

 # Use constant diffusion coefficient, selected by default option `a=0'

 gde -D 1 -t $t
 
 # Convert diffused profiles back into two column format and store

 rm -f d.r
 nawk '{printf("%20.17e %20.17e\n",$1,$2)}' X.r >> d.r
 cp d.r d-t=$t.r
 
 # Prepare to implement Schrodinger and Poisson solution

 cp x0.r x.r 	# restore original quantum well definition
 efxv -p h	# generate band edge potential data

 for I in 0 1 2 3 4 5 6 7	# perform several iterations
 do
 {
  echo -n $I >> $OUT

  # Calculate ground state energy

  efshoot -p h

  # And wave function

  efwf -p h

  # Write energy to output file

  nawk '{printf("\t%20.17e\n",$2)}' Eh.r >> $OUT

  # Implement self consistent Poisson calculation

  scp -p h
 }
 done # I

# Now save final self-consistent potential and wave function

mv V.r V-t=$t.r
mv wf_h1.r wf_h1-t=$t.r

}
done

#!/bin/ksh
# Superlattice as a perturbation calculation for GaAs/AlAs as a function of 
# the period.
# Initialise files

rm -f ank*.r Ek*.r

# Define output file and initialise

OUTPUT=E-Nz.r
rm -f $OUTPUT

# Solve bulk band structure for this superlattice k-point, use Mader and
# Zunger potentials

#First generate atomic positions in bulk

echo 2  > atoms.xyz
echo   >> atoms.xyz                            # leave blank line
echo GAASmz -0.706 -0.706 -0.706 >> atoms.xyz
echo ASGAmz  0.706  0.706  0.706 >> atoms.xyz

# Generate reciprocal latice vectors, and sort them

rlv-fcc 

ppsg

# Loop over superlattice period

for NZ in 1 2 3 4 5 6 7 8 9 10 12 14 
do
{
# Create bulk wave vectors required for superlattice calculation

slk -k 0 -z $NZ

# Implement pseudopotential band structure calculation, use default lattice
# constant, and output the uppermost VB and the 2 lowest CBs
# Just define
N=4
M=6

pplb -n $N -m $M -w

# Create `single-spiral' unit cell of the unperturbed atoms

csss -a ASGAmz -c GAASmz -z $NZ

# Now create superlattice by swapping atoms

rm -f atomsp.xyz	# initialise file
let A=2*NZ+3		# the first atom to be swapped
let B=4*NZ+2		# the last atom to be swapped
sed "$A,$B s/GA/AL/" atoms.xyz >> atomsp.xyz

# Convert also to pdb format for visual check

xyz2pdb atomsp

# Implement superlattice calculation, with this expanded basis set including
# VB states the state of interest is no longer the lowest, in fact each bulk
# state produces 2 superlattice states, hence with 1 VB state, the lowest 
# superlattice CB state is number 3.
# Calculate the number of bands and hence output all states
let NN=M-N+1
let Msl=2*NN*NZ

ppsl -n 1 -m $Msl

# Collate lowest conduction band energy levels.  Bulk GaAs calculation
# gave top of the valence band as -5.505446 eV, hence add this to all
# values

echo -n $NZ >> $OUTPUT	# enter superlattice period first

nawk '{for(i=1;i<=NF;i++)if($i+5.505446>1.4) printf("%10.6f",$1+5.505446)}' Exi.r >> $OUTPUT

echo -n -e "\n" >> $OUTPUT	# complete line
}
done

# Tidy up

rm -f Ek*.r ank*.r
